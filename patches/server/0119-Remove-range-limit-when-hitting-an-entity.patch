From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kirill <iyaargg@gmail.com>
Date: Sat, 5 Oct 2024 07:45:36 +0500
Subject: [PATCH] Remove range limit when hitting an entity.


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 2f5706860b17c41133e0984a100b442ee596b454..2b99dc2a3153c6ac5628b0fed9f59afb44c71552 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1298,78 +1298,81 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
         this.player.resetIdleTimer();
         if (entity != null) {
-            boolean flag = this.player.hasLineOfSight(entity);
+            // Rejomy patch start
+/*          boolean flag = this.player.hasLineOfSight(entity);
             double d0 = 36.0D;
 
             if (!flag) {
                 d0 = 9.0D;
             }
 
-            if (this.player.h(entity) < d0) {
-                ItemStack itemInHand = this.player.inventory.getItemInHand(); // CraftBukkit
+            if (this.player.h(entity) < d0) {*/
 
-                if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT
-                        || packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
-                    // CraftBukkit start
-                    boolean triggerLeashUpdate = itemInHand != null && itemInHand.getItem() == Items.LEAD && entity instanceof EntityInsentient;
-                    Item origItem = this.player.inventory.getItemInHand() == null ? null : this.player.inventory.getItemInHand().getItem();
-                    PlayerInteractEntityEvent event;
-                    if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT) {
-                        event = new PlayerInteractEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity());
-                    } else {
-                        Vec3D target = packetplayinuseentity.b();
-                        event = new PlayerInteractAtEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), new org.bukkit.util.Vector(target.a, target.b, target.c));
-                    }
-                    this.server.getPluginManager().callEvent(event);
+            ItemStack itemInHand = this.player.inventory.getItemInHand(); // CraftBukkit
 
-                    if (triggerLeashUpdate && (event.isCancelled() || this.player.inventory.getItemInHand() == null || this.player.inventory.getItemInHand().getItem() != Items.LEAD)) {
-                        // Refresh the current leash state
-                        this.sendPacket(new PacketPlayOutAttachEntity(1, entity, ((EntityInsentient) entity).getLeashHolder()));
-                    }
+            if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT
+                || packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
+                // CraftBukkit start
+                boolean triggerLeashUpdate = itemInHand != null && itemInHand.getItem() == Items.LEAD && entity instanceof EntityInsentient;
+                Item origItem = this.player.inventory.getItemInHand() == null ? null : this.player.inventory.getItemInHand().getItem();
+                PlayerInteractEntityEvent event;
+                if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT) {
+                    event = new PlayerInteractEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity());
+                } else {
+                    Vec3D target = packetplayinuseentity.b();
+                    event = new PlayerInteractAtEntityEvent((Player) this.getPlayer(), entity.getBukkitEntity(), new org.bukkit.util.Vector(target.a, target.b, target.c));
+                }
+                this.server.getPluginManager().callEvent(event);
 
-                    if (event.isCancelled() || this.player.inventory.getItemInHand() == null || this.player.inventory.getItemInHand().getItem() != origItem) {
-                        // Refresh the current entity metadata
-                        this.sendPacket(new PacketPlayOutEntityMetadata(entity.getId(), entity.datawatcher, true));
-                    }
+                if (triggerLeashUpdate && (event.isCancelled() || this.player.inventory.getItemInHand() == null || this.player.inventory.getItemInHand().getItem() != Items.LEAD)) {
+                    // Refresh the current leash state
+                    this.sendPacket(new PacketPlayOutAttachEntity(1, entity, ((EntityInsentient) entity).getLeashHolder()));
+                }
 
-                    if (event.isCancelled()) {
-                        return;
-                    }
-                    // CraftBukkit end
+                if (event.isCancelled() || this.player.inventory.getItemInHand() == null || this.player.inventory.getItemInHand().getItem() != origItem) {
+                    // Refresh the current entity metadata
+                    this.sendPacket(new PacketPlayOutEntityMetadata(entity.getId(), entity.datawatcher, true));
                 }
-                if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT) {
-                    this.player.u(entity);
 
-                    // CraftBukkit start
-                    if (itemInHand != null && itemInHand.count <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
-                    }
-                    // CraftBukkit end
-                } else if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
-                    entity.a((EntityHuman) this.player, packetplayinuseentity.b());
+                if (event.isCancelled()) {
+                    return;
+                }
+                // CraftBukkit end
+            }
+            if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT) {
+                this.player.u(entity);
 
-                    // CraftBukkit start
-                    if (itemInHand != null && itemInHand.count <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
-                    }
-                    // CraftBukkit end
-                } else if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.ATTACK) {
-                    if (entity instanceof EntityItem || entity instanceof EntityExperienceOrb || entity instanceof EntityArrow || (entity == this.player && !player.isSpectator())) { // CraftBukkit
-                        this.disconnect("Attempting to attack an invalid entity");
-                        this.minecraftServer.warning("Player " + this.player.getName() + " tried to attack an invalid entity");
-                        return;
-                    }
+                // CraftBukkit start
+                if (itemInHand != null && itemInHand.count <= -1) {
+                    this.player.updateInventory(this.player.activeContainer);
+                }
+                // CraftBukkit end
+            } else if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.INTERACT_AT) {
+                entity.a((EntityHuman) this.player, packetplayinuseentity.b());
 
-                    this.player.attack(entity);
+                // CraftBukkit start
+                if (itemInHand != null && itemInHand.count <= -1) {
+                    this.player.updateInventory(this.player.activeContainer);
+                }
+                // CraftBukkit end
+            } else if (packetplayinuseentity.a() == PacketPlayInUseEntity.EnumEntityUseAction.ATTACK) {
+                if (entity instanceof EntityItem || entity instanceof EntityExperienceOrb || entity instanceof EntityArrow || (entity == this.player && !player.isSpectator())) { // CraftBukkit
+                    this.disconnect("Attempting to attack an invalid entity");
+                    this.minecraftServer.warning("Player " + this.player.getName() + " tried to attack an invalid entity");
+                    return;
+                }
 
-                    // CraftBukkit start
-                    if (itemInHand != null && itemInHand.count <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
-                    }
-                    // CraftBukkit end
+                this.player.attack(entity);
+
+                // CraftBukkit start
+                if (itemInHand != null && itemInHand.count <= -1) {
+                    this.player.updateInventory(this.player.activeContainer);
                 }
+                // CraftBukkit end
             }
         }
+        //}
+        // Rejomy patch start
 
     }
 
